{"/Users/oliverchan/reach-app/gcf/src/testUtils/hooks.ts":{"path":"/Users/oliverchan/reach-app/gcf/src/testUtils/hooks.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":8,"column":3}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":33}},"2":{"start":{"line":3,"column":26},"end":{"line":3,"column":33}},"3":{"start":{"line":4,"column":4},"end":{"line":4,"column":89}},"4":{"start":{"line":4,"column":71},"end":{"line":4,"column":83}},"5":{"start":{"line":6,"column":4},"end":{"line":6,"column":33}},"6":{"start":{"line":6,"column":26},"end":{"line":6,"column":33}},"7":{"start":{"line":7,"column":4},"end":{"line":7,"column":17}},"8":{"start":{"line":9,"column":25},"end":{"line":13,"column":2}},"9":{"start":{"line":10,"column":4},"end":{"line":10,"column":72}},"10":{"start":{"line":12,"column":4},"end":{"line":12,"column":21}},"11":{"start":{"line":14,"column":19},"end":{"line":20,"column":1}},"12":{"start":{"line":15,"column":4},"end":{"line":15,"column":42}},"13":{"start":{"line":15,"column":31},"end":{"line":15,"column":42}},"14":{"start":{"line":16,"column":17},"end":{"line":16,"column":19}},"15":{"start":{"line":17,"column":4},"end":{"line":17,"column":141}},"16":{"start":{"line":17,"column":21},"end":{"line":17,"column":141}},"17":{"start":{"line":17,"column":40},"end":{"line":17,"column":141}},"18":{"start":{"line":17,"column":109},"end":{"line":17,"column":141}},"19":{"start":{"line":18,"column":4},"end":{"line":18,"column":36}},"20":{"start":{"line":19,"column":4},"end":{"line":19,"column":18}},"21":{"start":{"line":21,"column":22},"end":{"line":23,"column":1}},"22":{"start":{"line":22,"column":4},"end":{"line":22,"column":62}},"23":{"start":{"line":24,"column":0},"end":{"line":24,"column":62}},"24":{"start":{"line":25,"column":15},"end":{"line":25,"column":47}},"25":{"start":{"line":26,"column":23},"end":{"line":26,"column":63}},"26":{"start":{"line":27,"column":27},"end":{"line":27,"column":71}},"27":{"start":{"line":28,"column":21},"end":{"line":28,"column":59}},"28":{"start":{"line":29,"column":14},"end":{"line":29,"column":56}},"29":{"start":{"line":30,"column":20},"end":{"line":30,"column":56}},"30":{"start":{"line":31,"column":16},"end":{"line":31,"column":32}},"31":{"start":{"line":33,"column":0},"end":{"line":51,"column":2}},"32":{"start":{"line":35,"column":8},"end":{"line":35,"column":47}},"33":{"start":{"line":36,"column":8},"end":{"line":36,"column":51}},"34":{"start":{"line":37,"column":8},"end":{"line":37,"column":49}},"35":{"start":{"line":44,"column":8},"end":{"line":44,"column":55}},"36":{"start":{"line":45,"column":8},"end":{"line":45,"column":63}},"37":{"start":{"line":46,"column":8},"end":{"line":46,"column":15}},"38":{"start":{"line":49,"column":8},"end":{"line":49,"column":26}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":74},"end":{"line":2,"column":75}},"loc":{"start":{"line":2,"column":96},"end":{"line":5,"column":1}},"line":2},"1":{"name":"(anonymous_1)","decl":{"start":{"line":4,"column":58},"end":{"line":4,"column":59}},"loc":{"start":{"line":4,"column":69},"end":{"line":4,"column":85}},"line":4},"2":{"name":"(anonymous_2)","decl":{"start":{"line":5,"column":6},"end":{"line":5,"column":7}},"loc":{"start":{"line":5,"column":28},"end":{"line":8,"column":1}},"line":5},"3":{"name":"(anonymous_3)","decl":{"start":{"line":9,"column":80},"end":{"line":9,"column":81}},"loc":{"start":{"line":9,"column":95},"end":{"line":11,"column":1}},"line":9},"4":{"name":"(anonymous_4)","decl":{"start":{"line":11,"column":5},"end":{"line":11,"column":6}},"loc":{"start":{"line":11,"column":20},"end":{"line":13,"column":1}},"line":11},"5":{"name":"(anonymous_5)","decl":{"start":{"line":14,"column":50},"end":{"line":14,"column":51}},"loc":{"start":{"line":14,"column":65},"end":{"line":20,"column":1}},"line":14},"6":{"name":"(anonymous_6)","decl":{"start":{"line":21,"column":56},"end":{"line":21,"column":57}},"loc":{"start":{"line":21,"column":71},"end":{"line":23,"column":1}},"line":21},"7":{"name":"(anonymous_7)","decl":{"start":{"line":34,"column":4},"end":{"line":34,"column":5}},"loc":{"start":{"line":34,"column":21},"end":{"line":47,"column":5}},"line":34},"8":{"name":"(anonymous_8)","decl":{"start":{"line":48,"column":4},"end":{"line":48,"column":5}},"loc":{"start":{"line":48,"column":16},"end":{"line":50,"column":5}},"line":48}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":8,"column":3}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":57},"end":{"line":8,"column":2}}],"line":2},"1":{"loc":{"start":{"line":2,"column":57},"end":{"line":8,"column":2}},"type":"cond-expr","locations":[{"start":{"line":2,"column":74},"end":{"line":5,"column":1}},{"start":{"line":5,"column":6},"end":{"line":8,"column":1}}],"line":2},"2":{"loc":{"start":{"line":3,"column":4},"end":{"line":3,"column":33}},"type":"if","locations":[{"start":{"line":3,"column":4},"end":{"line":3,"column":33}},{"start":{"line":3,"column":4},"end":{"line":3,"column":33}}],"line":3},"3":{"loc":{"start":{"line":6,"column":4},"end":{"line":6,"column":33}},"type":"if","locations":[{"start":{"line":6,"column":4},"end":{"line":6,"column":33}},{"start":{"line":6,"column":4},"end":{"line":6,"column":33}}],"line":6},"4":{"loc":{"start":{"line":9,"column":25},"end":{"line":13,"column":2}},"type":"binary-expr","locations":[{"start":{"line":9,"column":26},"end":{"line":9,"column":30}},{"start":{"line":9,"column":34},"end":{"line":9,"column":57}},{"start":{"line":9,"column":63},"end":{"line":13,"column":1}}],"line":9},"5":{"loc":{"start":{"line":9,"column":63},"end":{"line":13,"column":1}},"type":"cond-expr","locations":[{"start":{"line":9,"column":80},"end":{"line":11,"column":1}},{"start":{"line":11,"column":5},"end":{"line":13,"column":1}}],"line":9},"6":{"loc":{"start":{"line":14,"column":19},"end":{"line":20,"column":1}},"type":"binary-expr","locations":[{"start":{"line":14,"column":20},"end":{"line":14,"column":24}},{"start":{"line":14,"column":28},"end":{"line":14,"column":45}},{"start":{"line":14,"column":50},"end":{"line":20,"column":1}}],"line":14},"7":{"loc":{"start":{"line":15,"column":4},"end":{"line":15,"column":42}},"type":"if","locations":[{"start":{"line":15,"column":4},"end":{"line":15,"column":42}},{"start":{"line":15,"column":4},"end":{"line":15,"column":42}}],"line":15},"8":{"loc":{"start":{"line":15,"column":8},"end":{"line":15,"column":29}},"type":"binary-expr","locations":[{"start":{"line":15,"column":8},"end":{"line":15,"column":11}},{"start":{"line":15,"column":15},"end":{"line":15,"column":29}}],"line":15},"9":{"loc":{"start":{"line":17,"column":4},"end":{"line":17,"column":141}},"type":"if","locations":[{"start":{"line":17,"column":4},"end":{"line":17,"column":141}},{"start":{"line":17,"column":4},"end":{"line":17,"column":141}}],"line":17},"10":{"loc":{"start":{"line":17,"column":40},"end":{"line":17,"column":141}},"type":"if","locations":[{"start":{"line":17,"column":40},"end":{"line":17,"column":141}},{"start":{"line":17,"column":40},"end":{"line":17,"column":141}}],"line":17},"11":{"loc":{"start":{"line":17,"column":44},"end":{"line":17,"column":107}},"type":"binary-expr","locations":[{"start":{"line":17,"column":44},"end":{"line":17,"column":59}},{"start":{"line":17,"column":63},"end":{"line":17,"column":107}}],"line":17},"12":{"loc":{"start":{"line":21,"column":22},"end":{"line":23,"column":1}},"type":"binary-expr","locations":[{"start":{"line":21,"column":23},"end":{"line":21,"column":27}},{"start":{"line":21,"column":31},"end":{"line":21,"column":51}},{"start":{"line":21,"column":56},"end":{"line":23,"column":1}}],"line":21},"13":{"loc":{"start":{"line":22,"column":11},"end":{"line":22,"column":61}},"type":"cond-expr","locations":[{"start":{"line":22,"column":37},"end":{"line":22,"column":40}},{"start":{"line":22,"column":43},"end":{"line":22,"column":61}}],"line":22},"14":{"loc":{"start":{"line":22,"column":12},"end":{"line":22,"column":33}},"type":"binary-expr","locations":[{"start":{"line":22,"column":12},"end":{"line":22,"column":15}},{"start":{"line":22,"column":19},"end":{"line":22,"column":33}}],"line":22}},"s":{"0":1,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":1,"9":0,"10":0,"11":1,"12":1,"13":1,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":1,"22":4,"23":1,"24":1,"25":1,"26":1,"27":1,"28":1,"29":1,"30":1,"31":1,"32":6,"33":6,"34":6,"35":6,"36":6,"37":6,"38":6},"f":{"0":0,"1":0,"2":0,"3":0,"4":0,"5":1,"6":4,"7":6,"8":6},"b":{"0":[1,1,1],"1":[1,0],"2":[0,0],"3":[0,0],"4":[1,1,1],"5":[1,0],"6":[1,1,1],"7":[1,0],"8":[1,1],"9":[0,0],"10":[0,0],"11":[0,0],"12":[1,1,1],"13":[0,4],"14":[4,4]},"inputSourceMap":{"version":3,"file":"/Users/oliverchan/reach-app/gcf/src/testUtils/hooks.ts","sources":["/Users/oliverchan/reach-app/gcf/src/testUtils/hooks.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAAA,gDAAwB;AACxB,gEAAuC;AACvC,wEAA8C;AAC9C,4DAAmC;AACnC,yDAA2C;AAC3C,yDAAsD;AAEtD,iCAAoD;AAEpD,IAAI,OAAqB,CAAC;AAC1B,OAAO,CAAC,UAAU,GAAG;IACjB,UAAU,CAAC,IAAU;QACjB,OAAO,GAAG,IAAA,qBAAa,GAAE,CAAC;QAC1B,cAAI,CAAC,GAAG,CAAC,sBAAW,CAAC,CAAC;QACtB,cAAI,CAAC,GAAG,CAAC,oBAAS,CAAC,CAAC;QACpB,kGAAkG;QAClG,8EAA8E;QAC9E,4FAA4F;QAC5F,6CAA6C;QAC7C,yDAAyD;QACzD,gFAAgF;QAChF,cAAI,CAAC,GAAG,CAAC,0BAAc,CAAC,CAAC;QACzB,OAAO,CAAC,OAAO,CAAC,KAAK,EAAE,OAAO,EAAE,qBAAS,CAAC,CAAC;QAC3C,IAAI,EAAE,CAAC;IACX,CAAC;IACD,SAAS;QACL,OAAO,CAAC,OAAO,EAAE,CAAC;IACtB,CAAC;CACJ,CAAC","sourcesContent":["import chai from 'chai';\nimport chaiExclude from 'chai-exclude';\nimport chaiAsPromised from 'chai-as-promised';\nimport sinonChai from 'sinon-chai';\nimport * as retry from '@root/utils/retry';\nimport { mockRetry } from '@root/testUtils/mockRetry';\nimport { Done } from 'mocha';\nimport { createSandbox, SinonSandbox } from 'sinon';\n\nlet sandbox: SinonSandbox;\nexports.mochaHooks = {\n    beforeEach(done: Done) {\n        sandbox = createSandbox();\n        chai.use(chaiExclude);\n        chai.use(sinonChai);\n        // CAUTION: Its important to load chai as promised after other chai extensions as loading it first\n        // caused to deep.equal to always return true even when objects are not equal.\n        // I didn't find any references regarding this particular issue but there are similar issues\n        // reported. Following are couple of examples\n        // https://github.com/domenic/chai-as-promised/issues/215\n        // https://www.bountysource.com/teams/chai-as-promised/issues?tracker_ids=295399\n        chai.use(chaiAsPromised);\n        sandbox.replace(retry, 'retry', mockRetry);\n        done();\n    },\n    afterEach() {\n        sandbox.restore();\n    },\n};\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"a616cf1dfae6124c40427680a2edd24ff5b270e3","contentHash":"d00bbae2446bb5fcf62b599b48ce5a27cc1917837c662308282e410ddc00a30a"},"/Users/oliverchan/reach-app/gcf/src/utils/retry.ts":{"path":"/Users/oliverchan/reach-app/gcf/src/utils/retry.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":62}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":62}},"3":{"start":{"line":6,"column":0},"end":{"line":6,"column":23}},"4":{"start":{"line":7,"column":22},"end":{"line":7,"column":61}},"5":{"start":{"line":8,"column":0},"end":{"line":8,"column":38}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":56},"end":{"line":2,"column":57}},"loc":{"start":{"line":2,"column":71},"end":{"line":4,"column":1}},"line":2}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":56},"end":{"line":4,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":11},"end":{"line":3,"column":61}},"type":"cond-expr","locations":[{"start":{"line":3,"column":37},"end":{"line":3,"column":40}},{"start":{"line":3,"column":43},"end":{"line":3,"column":61}}],"line":3},"2":{"loc":{"start":{"line":3,"column":12},"end":{"line":3,"column":33}},"type":"binary-expr","locations":[{"start":{"line":3,"column":12},"end":{"line":3,"column":15}},{"start":{"line":3,"column":19},"end":{"line":3,"column":33}}],"line":3}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1},"f":{"0":1},"b":{"0":[1,1,1],"1":[0,1],"2":[1,1]},"inputSourceMap":{"version":3,"file":"/Users/oliverchan/reach-app/gcf/src/utils/retry.ts","sources":["/Users/oliverchan/reach-app/gcf/src/utils/retry.ts"],"names":[],"mappings":";;;;;;AAAA,8DAAgC;AACvB,gBADF,qBAAK,CACE","sourcesContent":["import retry from 'async-retry';\nexport { retry };\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"4950380b2325cf5d2c68a4f3bd5fbd23e1eb2295","contentHash":"b632d7fbfb04bb3d09493cf632849fe3f4abe4bbd3f33cd327e77d664c91aa23"},"/Users/oliverchan/reach-app/gcf/src/testUtils/mockRetry.ts":{"path":"/Users/oliverchan/reach-app/gcf/src/testUtils/mockRetry.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":27}},"2":{"start":{"line":4,"column":18},"end":{"line":26,"column":1}},"3":{"start":{"line":6,"column":18},"end":{"line":6,"column":125}},"4":{"start":{"line":8,"column":17},"end":{"line":11,"column":5}},"5":{"start":{"line":9,"column":8},"end":{"line":9,"column":26}},"6":{"start":{"line":10,"column":8},"end":{"line":10,"column":20}},"7":{"start":{"line":12,"column":20},"end":{"line":24,"column":5}},"8":{"start":{"line":13,"column":8},"end":{"line":23,"column":9}},"9":{"start":{"line":14,"column":28},"end":{"line":14,"column":51}},"10":{"start":{"line":15,"column":12},"end":{"line":15,"column":27}},"11":{"start":{"line":18,"column":12},"end":{"line":21,"column":13}},"12":{"start":{"line":19,"column":16},"end":{"line":19,"column":29}},"13":{"start":{"line":20,"column":16},"end":{"line":20,"column":33}},"14":{"start":{"line":22,"column":12},"end":{"line":22,"column":24}},"15":{"start":{"line":25,"column":4},"end":{"line":25,"column":21}},"16":{"start":{"line":27,"column":0},"end":{"line":27,"column":30}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":4,"column":18},"end":{"line":4,"column":19}},"loc":{"start":{"line":4,"column":35},"end":{"line":26,"column":1}},"line":4},"1":{"name":"(anonymous_1)","decl":{"start":{"line":8,"column":17},"end":{"line":8,"column":18}},"loc":{"start":{"line":8,"column":28},"end":{"line":11,"column":5}},"line":8},"2":{"name":"(anonymous_2)","decl":{"start":{"line":12,"column":20},"end":{"line":12,"column":21}},"loc":{"start":{"line":12,"column":32},"end":{"line":24,"column":5}},"line":12}},"branchMap":{"0":{"loc":{"start":{"line":6,"column":18},"end":{"line":6,"column":125}},"type":"cond-expr","locations":[{"start":{"line":6,"column":119},"end":{"line":6,"column":121}},{"start":{"line":6,"column":124},"end":{"line":6,"column":125}}],"line":6},"1":{"loc":{"start":{"line":6,"column":18},"end":{"line":6,"column":116}},"type":"binary-expr","locations":[{"start":{"line":6,"column":18},"end":{"line":6,"column":99}},{"start":{"line":6,"column":103},"end":{"line":6,"column":116}}],"line":6},"2":{"loc":{"start":{"line":6,"column":24},"end":{"line":6,"column":89}},"type":"cond-expr","locations":[{"start":{"line":6,"column":65},"end":{"line":6,"column":71}},{"start":{"line":6,"column":74},"end":{"line":6,"column":89}}],"line":6},"3":{"loc":{"start":{"line":6,"column":24},"end":{"line":6,"column":62}},"type":"binary-expr","locations":[{"start":{"line":6,"column":24},"end":{"line":6,"column":40}},{"start":{"line":6,"column":44},"end":{"line":6,"column":62}}],"line":6},"4":{"loc":{"start":{"line":18,"column":12},"end":{"line":21,"column":13}},"type":"if","locations":[{"start":{"line":18,"column":12},"end":{"line":21,"column":13}},{"start":{"line":18,"column":12},"end":{"line":21,"column":13}}],"line":18},"5":{"loc":{"start":{"line":18,"column":16},"end":{"line":18,"column":37}},"type":"binary-expr","locations":[{"start":{"line":18,"column":16},"end":{"line":18,"column":23}},{"start":{"line":18,"column":27},"end":{"line":18,"column":37}}],"line":18}},"s":{"0":1,"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":1},"f":{"0":0,"1":0,"2":0},"b":{"0":[0,0],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0]},"inputSourceMap":{"version":3,"file":"/Users/oliverchan/reach-app/gcf/src/testUtils/mockRetry.ts","sources":["/Users/oliverchan/reach-app/gcf/src/testUtils/mockRetry.ts"],"names":[],"mappings":";;;AAEO,MAAM,SAAS,GAAsB,CAAC,EAAE,EAAE,OAAO,EAAE,EAAE;;IACxD,IAAI,OAAO,GAAG,MAAA,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,OAAO,mCAAI,CAAC,CAAC;IACpC,IAAI,SAA4B,CAAC;IAEjC,MAAM,IAAI,GAAG,CAAC,KAAY,EAAE,EAAE;QAC1B,SAAS,GAAG,KAAK,CAAC;QAClB,MAAM,KAAK,CAAC;IAChB,CAAC,CAAC;IAEF,MAAM,OAAO,GAAG,KAAK,IAAkB,EAAE;QACrC,IAAI;YACA,MAAM,OAAO,GAAG,MAAM,EAAE,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC;YACxC,OAAO,OAAO,CAAC;SAClB;QAAC,OAAO,KAAU,EAAE;YACjB,IAAI,OAAO,IAAI,CAAC,SAAS,EAAE;gBACvB,OAAO,IAAI,CAAC,CAAC;gBACb,OAAO,OAAO,EAAE,CAAC;aACpB;YACD,MAAM,KAAK,CAAC;SACf;IACL,CAAC,CAAC;IAEF,OAAO,OAAO,EAAE,CAAC;AACrB,CAAC,CAAC;AAvBW,QAAA,SAAS,aAuBpB","sourcesContent":["import AsyncRetry from 'async-retry';\n\nexport const mockRetry: typeof AsyncRetry = (fn, options) => {\n    let retries = options?.retries ?? 0;\n    let bailError: Error | undefined;\n\n    const bail = (error: Error) => {\n        bailError = error;\n        throw error;\n    };\n\n    const wrapper = async (): Promise<any> => {\n        try {\n            const results = await fn(bail, retries);\n            return results;\n        } catch (error: any) {\n            if (retries && !bailError) {\n                retries -= 1;\n                return wrapper();\n            }\n            throw error;\n        }\n    };\n\n    return wrapper();\n};\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"3631ca39d9ee3b202e819b9c6c31f7cd72c216e1","contentHash":"cc9894c7a24c486b2fa5d8f2c8f384c4040b13edd5dc8acc9b8db26d56376f98"},"/Users/oliverchan/reach-app/gcf/src/testUtils/describe.ts":{"path":"/Users/oliverchan/reach-app/gcf/src/testUtils/describe.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":117}},"2":{"start":{"line":4,"column":17},"end":{"line":4,"column":50}},"3":{"start":{"line":5,"column":29},"end":{"line":7,"column":1}},"4":{"start":{"line":6,"column":4},"end":{"line":6,"column":109}},"5":{"start":{"line":8,"column":0},"end":{"line":8,"column":52}},"6":{"start":{"line":9,"column":36},"end":{"line":11,"column":1}},"7":{"start":{"line":10,"column":4},"end":{"line":10,"column":116}},"8":{"start":{"line":12,"column":0},"end":{"line":12,"column":66}},"9":{"start":{"line":13,"column":39},"end":{"line":15,"column":1}},"10":{"start":{"line":14,"column":4},"end":{"line":14,"column":119}},"11":{"start":{"line":16,"column":0},"end":{"line":16,"column":72}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":5,"column":29},"end":{"line":5,"column":30}},"loc":{"start":{"line":5,"column":60},"end":{"line":7,"column":1}},"line":5},"1":{"name":"(anonymous_1)","decl":{"start":{"line":9,"column":36},"end":{"line":9,"column":37}},"loc":{"start":{"line":9,"column":67},"end":{"line":11,"column":1}},"line":9},"2":{"name":"(anonymous_2)","decl":{"start":{"line":13,"column":39},"end":{"line":13,"column":40}},"loc":{"start":{"line":13,"column":70},"end":{"line":15,"column":1}},"line":13}},"branchMap":{},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":0,"8":1,"9":1,"10":0,"11":1},"f":{"0":1,"1":0,"2":0},"b":{},"inputSourceMap":{"version":3,"file":"/Users/oliverchan/reach-app/gcf/src/testUtils/describe.ts","sources":["/Users/oliverchan/reach-app/gcf/src/testUtils/describe.ts"],"names":[],"mappings":";;;AAAA,mDAAyE;AAElE,MAAM,oBAAoB,GAAG,CAChC,qBAAwC,EACxC,EAA+B,EACjC,EAAE;IACA,QAAQ,CAAC,IAAA,uBAAc,EAAC,MAAM,EAAE,IAAA,wBAAe,EAAC,qBAAqB,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;AACjF,CAAC,CAAC;AALW,QAAA,oBAAoB,wBAK/B;AAEK,MAAM,2BAA2B,GAAG,CACvC,qBAA6B,EAC7B,EAA+B,EACjC,EAAE;IACA,QAAQ,CAAC,IAAA,uBAAc,EAAC,aAAa,EAAE,IAAA,wBAAe,EAAC,qBAAqB,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;AACxF,CAAC,CAAC;AALW,QAAA,2BAA2B,+BAKtC;AAEK,MAAM,8BAA8B,GAAG,CAC1C,qBAA6B,EAC7B,EAA+B,EACjC,EAAE;IACA,QAAQ,CAAC,IAAA,uBAAc,EAAC,gBAAgB,EAAE,IAAA,wBAAe,EAAC,qBAAqB,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;AAC3F,CAAC,CAAC;AALW,QAAA,8BAA8B,kCAKzC","sourcesContent":["import { formatTestTitle, testGroupTitle } from '@root/testUtils/format';\n\nexport const describeUnitTestsFor = (\n    nameOfComponentToTest: string | Function,\n    fn: (this: Mocha.Suite) => void\n) => {\n    describe(testGroupTitle('Unit', formatTestTitle(nameOfComponentToTest)), fn);\n};\n\nexport const describeIntegrationTestsFor = (\n    nameOfComponentToTest: string,\n    fn: (this: Mocha.Suite) => void\n) => {\n    describe(testGroupTitle('Integration', formatTestTitle(nameOfComponentToTest)), fn);\n};\n\nexport const describePostDeploymentTestsFor = (\n    nameOfComponentToTest: string,\n    fn: (this: Mocha.Suite) => void\n) => {\n    describe(testGroupTitle('PostDeployment', formatTestTitle(nameOfComponentToTest)), fn);\n};\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"74479f16de431b72b29e32a8ecc412cefec18d38","contentHash":"40c7cb93557c6eba27ae3975253251fd7e935d7dc91ba8809ed10ba67deb5eac"},"/Users/oliverchan/reach-app/gcf/src/testUtils/format.ts":{"path":"/Users/oliverchan/reach-app/gcf/src/testUtils/format.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":58}},"2":{"start":{"line":4,"column":23},"end":{"line":4,"column":96}},"3":{"start":{"line":4,"column":48},"end":{"line":4,"column":96}},"4":{"start":{"line":5,"column":0},"end":{"line":5,"column":40}},"5":{"start":{"line":6,"column":24},"end":{"line":6,"column":89}},"6":{"start":{"line":6,"column":35},"end":{"line":6,"column":89}},"7":{"start":{"line":7,"column":0},"end":{"line":7,"column":42}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":4,"column":23},"end":{"line":4,"column":24}},"loc":{"start":{"line":4,"column":48},"end":{"line":4,"column":96}},"line":4},"1":{"name":"(anonymous_1)","decl":{"start":{"line":6,"column":24},"end":{"line":6,"column":25}},"loc":{"start":{"line":6,"column":35},"end":{"line":6,"column":89}},"line":6}},"branchMap":{"0":{"loc":{"start":{"line":6,"column":35},"end":{"line":6,"column":89}},"type":"cond-expr","locations":[{"start":{"line":6,"column":65},"end":{"line":6,"column":81}},{"start":{"line":6,"column":84},"end":{"line":6,"column":89}}],"line":6}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1},"f":{"0":1,"1":1},"b":{"0":[0,1]},"inputSourceMap":{"version":3,"file":"/Users/oliverchan/reach-app/gcf/src/testUtils/format.ts","sources":["/Users/oliverchan/reach-app/gcf/src/testUtils/format.ts"],"names":[],"mappings":";;;AAEO,MAAM,cAAc,GAAG,CAAC,QAAmB,EAAE,SAAiB,EAAE,EAAE,CACrE,IAAI,QAAQ,CAAC,WAAW,EAAE,WAAW,SAAS,EAAE,CAAC;AADxC,QAAA,cAAc,kBAC0B;AAE9C,MAAM,eAAe,GAAG,CAAC,KAAwB,EAAE,EAAE,CACxD,OAAO,KAAK,KAAK,UAAU,CAAC,CAAC,CAAC,IAAI,KAAK,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC;AAD9C,QAAA,eAAe,mBAC+B","sourcesContent":["export type TestTypes = 'Unit' | 'Integration' | 'PostDeployment';\n\nexport const testGroupTitle = (testType: TestTypes, groupName: string) =>\n    `[${testType.toUpperCase()} Tests] ${groupName}`;\n\nexport const formatTestTitle = (title: string | Function) =>\n    typeof title === 'function' ? `#${title.name}` : title;\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"170233b1a16574a9acaa29706cac557181f2abe4","contentHash":"70f54203e37df9a50c4078e36b9c98d16d9604f42721463a9437a2e7e47360aa"},"/Users/oliverchan/reach-app/gcf/src/utils/assertApiKey.ts":{"path":"/Users/oliverchan/reach-app/gcf/src/utils/assertApiKey.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":30}},"2":{"start":{"line":4,"column":20},"end":{"line":4,"column":52}},"3":{"start":{"line":5,"column":17},"end":{"line":5,"column":40}},"4":{"start":{"line":6,"column":17},"end":{"line":6,"column":37}},"5":{"start":{"line":16,"column":23},"end":{"line":16,"column":104}},"6":{"start":{"line":17,"column":21},"end":{"line":17,"column":42}},"7":{"start":{"line":18,"column":4},"end":{"line":44,"column":5}},"8":{"start":{"line":21,"column":27},"end":{"line":21,"column":37}},"9":{"start":{"line":22,"column":8},"end":{"line":27,"column":9}},"10":{"start":{"line":23,"column":12},"end":{"line":26,"column":13}},"11":{"start":{"line":24,"column":16},"end":{"line":24,"column":86}},"12":{"start":{"line":25,"column":16},"end":{"line":25,"column":36}},"13":{"start":{"line":28,"column":8},"end":{"line":28,"column":71}},"14":{"start":{"line":29,"column":8},"end":{"line":29,"column":52}},"15":{"start":{"line":33,"column":24},"end":{"line":33,"column":55}},"16":{"start":{"line":34,"column":27},"end":{"line":34,"column":48}},"17":{"start":{"line":35,"column":8},"end":{"line":42,"column":9}},"18":{"start":{"line":36,"column":12},"end":{"line":36,"column":67}},"19":{"start":{"line":37,"column":12},"end":{"line":37,"column":56}},"20":{"start":{"line":39,"column":13},"end":{"line":42,"column":9}},"21":{"start":{"line":40,"column":12},"end":{"line":40,"column":61}},"22":{"start":{"line":41,"column":12},"end":{"line":41,"column":56}},"23":{"start":{"line":43,"column":8},"end":{"line":43,"column":23}},"24":{"start":{"line":46,"column":0},"end":{"line":46,"column":36}}},"fnMap":{"0":{"name":"assertApiKey","decl":{"start":{"line":14,"column":15},"end":{"line":14,"column":27}},"loc":{"start":{"line":14,"column":48},"end":{"line":45,"column":1}},"line":14}},"branchMap":{"0":{"loc":{"start":{"line":16,"column":23},"end":{"line":16,"column":104}},"type":"cond-expr","locations":[{"start":{"line":16,"column":97},"end":{"line":16,"column":99}},{"start":{"line":16,"column":102},"end":{"line":16,"column":104}}],"line":16},"1":{"loc":{"start":{"line":16,"column":23},"end":{"line":16,"column":94}},"type":"binary-expr","locations":[{"start":{"line":16,"column":23},"end":{"line":16,"column":77}},{"start":{"line":16,"column":81},"end":{"line":16,"column":94}}],"line":16},"2":{"loc":{"start":{"line":18,"column":4},"end":{"line":44,"column":5}},"type":"if","locations":[{"start":{"line":18,"column":4},"end":{"line":44,"column":5}},{"start":{"line":18,"column":4},"end":{"line":44,"column":5}}],"line":18},"3":{"loc":{"start":{"line":23,"column":12},"end":{"line":26,"column":13}},"type":"if","locations":[{"start":{"line":23,"column":12},"end":{"line":26,"column":13}},{"start":{"line":23,"column":12},"end":{"line":26,"column":13}}],"line":23},"4":{"loc":{"start":{"line":35,"column":8},"end":{"line":42,"column":9}},"type":"if","locations":[{"start":{"line":35,"column":8},"end":{"line":42,"column":9}},{"start":{"line":35,"column":8},"end":{"line":42,"column":9}}],"line":35},"5":{"loc":{"start":{"line":39,"column":13},"end":{"line":42,"column":9}},"type":"if","locations":[{"start":{"line":39,"column":13},"end":{"line":42,"column":9}},{"start":{"line":39,"column":13},"end":{"line":42,"column":9}}],"line":39}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":7,"6":7,"7":7,"8":1,"9":1,"10":1,"11":0,"12":0,"13":1,"14":1,"15":6,"16":6,"17":6,"18":2,"19":2,"20":4,"21":1,"22":1,"23":3,"24":1},"f":{"0":7},"b":{"0":[6,1],"1":[7,7],"2":[1,6],"3":[0,1],"4":[2,4],"5":[1,3]},"inputSourceMap":{"version":3,"file":"/Users/oliverchan/reach-app/gcf/src/utils/assertApiKey.ts","sources":["/Users/oliverchan/reach-app/gcf/src/utils/assertApiKey.ts"],"names":[],"mappings":";;;AAAA,qDAAkD;AAElD,yCAAsC;AACtC,sCAA0C;AAM1C;;;;;;GAMG;AACI,KAAK,UAAU,YAAY,CAC9B,OAAwB,EACxB,SAAuB;;IAEvB,MAAM,UAAU,GAAG,MAAA,OAAO,CAAC,UAAU,CAAC,MAAM,CAAC,WAAW,CAAC,mCAAI,EAAE,CAAC;IAChE,MAAM,QAAQ,GAAG,UAAU,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;IAEvC,IAAI,QAAQ,CAAC,MAAM,KAAK,CAAC,EAAE;QACvB,sFAAsF;QACtF,gFAAgF;QAChF,MAAM,UAAU,GAAG,UAAU,CAAC;QAE9B,KAAK,MAAM,YAAY,IAAI,SAAS,EAAE;YAClC,IAAI,CAAC,MAAM,IAAA,qBAAS,EAAC,YAAY,CAAC,CAAC,KAAK,UAAU,EAAE;gBAChD,eAAM,CAAC,IAAI,CAAC,+CAA+C,CAAC,CAAC;gBAC7D,OAAO,YAA0B,CAAC;aACrC;SACJ;QACD,eAAM,CAAC,IAAI,CAAC,wCAAwC,CAAC,CAAC;QACtD,MAAM,IAAA,sBAAa,EAAC,QAAQ,CAAC,CAAC;KACjC;SAAM;QACH,uEAAuE;QACvE,MAAM,OAAO,GAAG,QAAQ,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAe,CAAC;QAC9D,MAAM,UAAU,GAAG,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAEzC,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,OAAO,CAAC,EAAE;YAC9B,eAAM,CAAC,IAAI,CAAC,gCAAgC,CAAC,CAAC;YAC9C,MAAM,IAAA,sBAAa,EAAC,QAAQ,CAAC,CAAC;SACjC;aAAM,IAAI,UAAU,KAAK,CAAC,MAAM,IAAA,qBAAS,EAAC,OAAO,CAAC,CAAC,EAAE;YAClD,eAAM,CAAC,IAAI,CAAC,0BAA0B,CAAC,CAAC;YACxC,MAAM,IAAA,sBAAa,EAAC,QAAQ,CAAC,CAAC;SACjC;QACD,OAAO,OAAO,CAAC;KAClB;AACL,CAAC;AAlCD,oCAkCC","sourcesContent":["import { getSecret } from '@root/utils/getSecret';\nimport { CallableContext } from 'firebase-functions/lib/providers/https';\nimport { logger } from '@root/logger';\nimport { createTtError } from '../errors';\n\nexport type ApiKeyName = \n    | 'auth-key-default' // For developers\n    | 'auth-key-other';\n\n/**\n * New API key format: plaintext-keyname_base64secretblahblah/+asdkfja=\n * Old API key format: base64secretblahblah/+asdkfja=\n * TODO(oliver) after we switch AWS secrets to the new version (i.e. named), remove the old logic.\n * @returns Name of API key used.\n * @throws createTtError('DENIED') if key is not good.\n */\nexport async function assertApiKey(\n    context: CallableContext,\n    validKeys: ApiKeyName[]\n): Promise<ApiKeyName> {\n    const offeredKey = context.rawRequest.header('x-api-key') ?? '';\n    const keyParts = offeredKey.split('_');\n\n    if (keyParts.length === 1) {\n        // This is an old API key, without the prefix name. To support transition, allow this.\n        // This design is bad because you are retrieving all API key secrets to check 1.\n        const keyContent = offeredKey;\n\n        for (const validKeyName of validKeys) {\n            if ((await getSecret(validKeyName)) === keyContent) {\n                logger.warn('API key (deprecated format) successful match.');\n                return validKeyName as ApiKeyName;\n            }\n        }\n        logger.warn('API key (deprecated format) incorrect.');\n        throw createTtError('DENIED');\n    } else {\n        // This is the new API key, with the prefix name. Only lookup 1 secret.\n        const keyName = keyParts.slice(0, -1).join('_') as ApiKeyName;\n        const keyContent = keyParts.slice(-1)[0];\n\n        if (!validKeys.includes(keyName)) {\n            logger.warn('Unknown API key name provided.');\n            throw createTtError('DENIED');\n        } else if (keyContent !== (await getSecret(keyName))) {\n            logger.warn('API key value incorrect.');\n            throw createTtError('DENIED');\n        }\n        return keyName;\n    }\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"83376bbc07d4b13d107a533ad29f2917e257a318","contentHash":"f1082aad0fb16ef20460b1dff55b4d914c5b2974f4b03b477f79c173591c9616"},"/Users/oliverchan/reach-app/gcf/src/utils/getSecret.ts":{"path":"/Users/oliverchan/reach-app/gcf/src/utils/getSecret.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":90}},"2":{"start":{"line":4,"column":17},"end":{"line":4,"column":40}},"3":{"start":{"line":5,"column":17},"end":{"line":5,"column":40}},"4":{"start":{"line":6,"column":26},"end":{"line":6,"column":64}},"5":{"start":{"line":8,"column":25},"end":{"line":8,"column":64}},"6":{"start":{"line":10,"column":34},"end":{"line":13,"column":1}},"7":{"start":{"line":11,"column":4},"end":{"line":11,"column":91}},"8":{"start":{"line":12,"column":4},"end":{"line":12,"column":27}},"9":{"start":{"line":14,"column":0},"end":{"line":14,"column":62}},"10":{"start":{"line":15,"column":26},"end":{"line":25,"column":1}},"11":{"start":{"line":17,"column":20},"end":{"line":17,"column":45}},"12":{"start":{"line":18,"column":4},"end":{"line":18,"column":74}},"13":{"start":{"line":19,"column":28},"end":{"line":19,"column":68}},"14":{"start":{"line":20,"column":30},"end":{"line":20,"column":87}},"15":{"start":{"line":21,"column":21},"end":{"line":23,"column":6}},"16":{"start":{"line":24,"column":4},"end":{"line":24,"column":179}},"17":{"start":{"line":26,"column":68},"end":{"line":26,"column":125}},"18":{"start":{"line":27,"column":0},"end":{"line":27,"column":30}},"19":{"start":{"line":28,"column":0},"end":{"line":28,"column":44}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":10,"column":34},"end":{"line":10,"column":35}},"loc":{"start":{"line":10,"column":40},"end":{"line":13,"column":1}},"line":10},"1":{"name":"(anonymous_1)","decl":{"start":{"line":15,"column":26},"end":{"line":15,"column":27}},"loc":{"start":{"line":15,"column":41},"end":{"line":25,"column":1}},"line":15}},"branchMap":{"0":{"loc":{"start":{"line":11,"column":22},"end":{"line":11,"column":90}},"type":"binary-expr","locations":[{"start":{"line":11,"column":22},"end":{"line":11,"column":37}},{"start":{"line":11,"column":41},"end":{"line":11,"column":90}}],"line":11},"1":{"loc":{"start":{"line":24,"column":11},"end":{"line":24,"column":178}},"type":"cond-expr","locations":[{"start":{"line":24,"column":171},"end":{"line":24,"column":173}},{"start":{"line":24,"column":176},"end":{"line":24,"column":178}}],"line":24},"2":{"loc":{"start":{"line":24,"column":11},"end":{"line":24,"column":168}},"type":"binary-expr","locations":[{"start":{"line":24,"column":11},"end":{"line":24,"column":151}},{"start":{"line":24,"column":155},"end":{"line":24,"column":168}}],"line":24},"3":{"loc":{"start":{"line":24,"column":17},"end":{"line":24,"column":141}},"type":"cond-expr","locations":[{"start":{"line":24,"column":119},"end":{"line":24,"column":125}},{"start":{"line":24,"column":128},"end":{"line":24,"column":141}}],"line":24},"4":{"loc":{"start":{"line":24,"column":17},"end":{"line":24,"column":116}},"type":"binary-expr","locations":[{"start":{"line":24,"column":17},"end":{"line":24,"column":99}},{"start":{"line":24,"column":103},"end":{"line":24,"column":116}}],"line":24},"5":{"loc":{"start":{"line":24,"column":23},"end":{"line":24,"column":89}},"type":"cond-expr","locations":[{"start":{"line":24,"column":73},"end":{"line":24,"column":79}},{"start":{"line":24,"column":82},"end":{"line":24,"column":89}}],"line":24},"6":{"loc":{"start":{"line":24,"column":23},"end":{"line":24,"column":70}},"type":"binary-expr","locations":[{"start":{"line":24,"column":23},"end":{"line":24,"column":53}},{"start":{"line":24,"column":57},"end":{"line":24,"column":70}}],"line":24}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":0,"8":0,"9":1,"10":1,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":1,"18":1,"19":1},"f":{"0":0,"1":0},"b":{"0":[0,0],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0]},"inputSourceMap":{"version":3,"file":"/Users/oliverchan/reach-app/gcf/src/utils/getSecret.ts","sources":["/Users/oliverchan/reach-app/gcf/src/utils/getSecret.ts"],"names":[],"mappings":";;;AAAA,yCAAsC;AACtC,yCAAsC;AACtC,iEAA8D;AAI9D,4CAA4C;AAC5C,iEAA0E;AAG1E,IAAI,eAAmD,CAAC;AAEjD,MAAM,yBAAyB,GAAG,GAAG,EAAE;IAC1C,eAAe,GAAG,eAAe,IAAI,IAAI,2CAA0B,EAAE,CAAC;IACtE,OAAO,eAAe,CAAC;AAC3B,CAAC,CAAC;AAHW,QAAA,yBAAyB,6BAGpC;AAEF,MAAM,iBAAiB,GAAc,KAAK,EAAE,GAAG,EAAE,EAAE;;IAC/C,MAAM,OAAO,GAAG,eAAM,CAAC,SAAS,CAAC;IACjC,eAAM,CAAC,IAAI,CAAC,kBAAkB,GAAG,iBAAiB,OAAO,EAAE,CAAC,CAAC;IAE7D,MAAM,eAAe,GAAG,IAAA,iCAAyB,GAAE,CAAC;IACpD,MAAM,iBAAiB,GAAG,eAAe,CAAC,iBAAiB,CAAC,OAAO,EAAE,GAAG,EAAE,QAAQ,CAAC,CAAC;IAEpF,MAAM,CAAC,MAAM,CAAC,GAAG,MAAM,eAAe,CAAC,mBAAmB,CAAC;QACvD,IAAI,EAAE,iBAAiB;KAC1B,CAAC,CAAC;IACH,OAAO,MAAA,MAAA,MAAA,MAAM,CAAC,OAAO,0CAAE,IAAI,0CAAE,QAAQ,EAAE,mCAAI,EAAE,CAAC;AAClD,CAAC,CAAC;AAEF,MAAM,EAAE,cAAc,EAAE,SAAS,EAAE,UAAU,EAAE,gBAAgB,EAAE,GAC7D,IAAA,iCAAe,EAAC,iBAAiB,CAAC,CAAC;AAE9B,8BAAS;AAAE,4CAAgB","sourcesContent":["import { config } from '@root/config';\nimport { logger } from '@root/logger';\nimport { cacheWithExpiry } from '@root/utils/cacheWithExpiry';\n\ntype GetSecret = (key: string) => Promise<string>;\n\n// eslint-disable-line no-restricted-imports\nimport { SecretManagerServiceClient } from '@google-cloud/secret-manager'; \nexport type GcpSecretManagerClient = InstanceType<typeof SecretManagerServiceClient>;\n\nlet gcpSecretClient: undefined | GcpSecretManagerClient;\n\nexport const getGcpSecretManagerClient = () => {\n    gcpSecretClient = gcpSecretClient || new SecretManagerServiceClient();\n    return gcpSecretClient;\n};\n\nconst getSecretRemotely: GetSecret = async (key) => {\n    const project = config.projectId;\n    logger.info(`Getting secret ${key} from project ${project}`);\n\n    const gcpSecretClient = getGcpSecretManagerClient();\n    const secretVersionPath = gcpSecretClient.secretVersionPath(project, key, 'latest');\n\n    const [secret] = await gcpSecretClient.accessSecretVersion({\n        name: secretVersionPath,\n    });\n    return secret.payload?.data?.toString() ?? '';\n};\n\nconst { cachedFunction: getSecret, clearCache: clearSecretCache } =\n    cacheWithExpiry(getSecretRemotely);\n\nexport { getSecret, clearSecretCache };\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"9ad233b735db5ae2b7baad145284a9fbeb8589e7","contentHash":"311d6d3bef801b44e7650374e52eff0d8b7e92d20bffbff132e424677b42d4f2"},"/Users/oliverchan/reach-app/gcf/src/config/index.ts":{"path":"/Users/oliverchan/reach-app/gcf/src/config/index.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":24}},"2":{"start":{"line":4,"column":0},"end":{"line":8,"column":2}}},"fnMap":{},"branchMap":{},"s":{"0":1,"1":1,"2":1},"f":{},"b":{},"inputSourceMap":{"version":3,"file":"/Users/oliverchan/reach-app/gcf/src/config/index.ts","sources":["/Users/oliverchan/reach-app/gcf/src/config/index.ts"],"names":[],"mappings":";;;AAEa,QAAA,MAAM,GAAkB;IACjC,YAAY,EAAE,KAAK;IACnB,MAAM,EAAE,iBAAiB;IACzB,SAAS,EAAE,0BAA0B;CACxC,CAAC","sourcesContent":["import { ProjectConfig } from './config.types';\n\nexport const config: ProjectConfig = {\n    isProduction: false,\n    region: 'asia-southeast2',\n    projectId: 'better-sg-attendance-stg',\n};\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"42765bd78ce24a12bb97a4df48eae086ba051aa3","contentHash":"4e60a7374d6364f1e753962707d91365a4981766529b4781b7c68c381f74bcf2"},"/Users/oliverchan/reach-app/gcf/src/logger/index.ts":{"path":"/Users/oliverchan/reach-app/gcf/src/logger/index.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":134}},"2":{"start":{"line":4,"column":17},"end":{"line":4,"column":57}},"3":{"start":{"line":5,"column":17},"end":{"line":5,"column":34}},"4":{"start":{"line":6,"column":15},"end":{"line":6,"column":30}},"5":{"start":{"line":7,"column":22},"end":{"line":7,"column":44}},"6":{"start":{"line":8,"column":0},"end":{"line":8,"column":30}},"7":{"start":{"line":10,"column":4},"end":{"line":10,"column":42}},"8":{"start":{"line":12,"column":0},"end":{"line":12,"column":50}},"9":{"start":{"line":15,"column":4},"end":{"line":15,"column":34}},"10":{"start":{"line":17,"column":0},"end":{"line":17,"column":54}},"11":{"start":{"line":19,"column":4},"end":{"line":21,"column":5}},"12":{"start":{"line":20,"column":8},"end":{"line":20,"column":41}},"13":{"start":{"line":22,"column":4},"end":{"line":22,"column":16}},"14":{"start":{"line":27,"column":29},"end":{"line":27,"column":54}},"15":{"start":{"line":28,"column":4},"end":{"line":37,"column":5}},"16":{"start":{"line":29,"column":26},"end":{"line":29,"column":46}},"17":{"start":{"line":30,"column":8},"end":{"line":30,"column":43}},"18":{"start":{"line":31,"column":22},"end":{"line":31,"column":80}},"19":{"start":{"line":32,"column":21},"end":{"line":32,"column":41}},"20":{"start":{"line":33,"column":8},"end":{"line":33,"column":94}},"21":{"start":{"line":36,"column":8},"end":{"line":36,"column":32}},"22":{"start":{"line":40,"column":18},"end":{"line":40,"column":42}},"23":{"start":{"line":41,"column":18},"end":{"line":41,"column":20}},"24":{"start":{"line":44,"column":34},"end":{"line":44,"column":35}},"25":{"start":{"line":45,"column":4},"end":{"line":45,"column":35}},"26":{"start":{"line":48,"column":4},"end":{"line":55,"column":5}},"27":{"start":{"line":48,"column":17},"end":{"line":48,"column":38}},"28":{"start":{"line":49,"column":25},"end":{"line":49,"column":33}},"29":{"start":{"line":50,"column":8},"end":{"line":50,"column":108}},"30":{"start":{"line":51,"column":8},"end":{"line":51,"column":104}},"31":{"start":{"line":52,"column":8},"end":{"line":54,"column":9}},"32":{"start":{"line":53,"column":12},"end":{"line":53,"column":18}},"33":{"start":{"line":56,"column":4},"end":{"line":56,"column":17}},"34":{"start":{"line":59,"column":4},"end":{"line":84,"column":6}},"35":{"start":{"line":62,"column":8},"end":{"line":68,"column":9}},"36":{"start":{"line":63,"column":31},"end":{"line":63,"column":40}},"37":{"start":{"line":64,"column":12},"end":{"line":66,"column":13}},"38":{"start":{"line":65,"column":16},"end":{"line":65,"column":39}},"39":{"start":{"line":67,"column":12},"end":{"line":67,"column":88}},"40":{"start":{"line":69,"column":25},"end":{"line":69,"column":159}},"41":{"start":{"line":70,"column":8},"end":{"line":82,"column":9}},"42":{"start":{"line":71,"column":46},"end":{"line":71,"column":66}},"43":{"start":{"line":73,"column":12},"end":{"line":81,"column":13}},"44":{"start":{"line":74,"column":16},"end":{"line":77,"column":28}},"45":{"start":{"line":80,"column":16},"end":{"line":80,"column":49}},"46":{"start":{"line":83,"column":8},"end":{"line":83,"column":38}},"47":{"start":{"line":86,"column":0},"end":{"line":86,"column":32}},"48":{"start":{"line":98,"column":0},"end":{"line":105,"column":2}}},"fnMap":{"0":{"name":"addLogGlobalContext","decl":{"start":{"line":9,"column":9},"end":{"line":9,"column":28}},"loc":{"start":{"line":9,"column":41},"end":{"line":11,"column":1}},"line":9},"1":{"name":"cleanLogGlobalContext","decl":{"start":{"line":14,"column":9},"end":{"line":14,"column":30}},"loc":{"start":{"line":14,"column":33},"end":{"line":16,"column":1}},"line":14},"2":{"name":"checkIfObjectAndConvertToString","decl":{"start":{"line":18,"column":9},"end":{"line":18,"column":40}},"loc":{"start":{"line":18,"column":47},"end":{"line":23,"column":1}},"line":18},"3":{"name":"getFilePath","decl":{"start":{"line":24,"column":9},"end":{"line":24,"column":20}},"loc":{"start":{"line":24,"column":23},"end":{"line":38,"column":1}},"line":24},"4":{"name":"getScope","decl":{"start":{"line":39,"column":9},"end":{"line":39,"column":17}},"loc":{"start":{"line":39,"column":20},"end":{"line":57,"column":1}},"line":39},"5":{"name":"makeLogger","decl":{"start":{"line":58,"column":9},"end":{"line":58,"column":19}},"loc":{"start":{"line":58,"column":30},"end":{"line":85,"column":1}},"line":58},"6":{"name":"(anonymous_6)","decl":{"start":{"line":59,"column":11},"end":{"line":59,"column":12}},"loc":{"start":{"line":59,"column":46},"end":{"line":84,"column":5}},"line":59}},"branchMap":{"0":{"loc":{"start":{"line":19,"column":4},"end":{"line":21,"column":5}},"type":"if","locations":[{"start":{"line":19,"column":4},"end":{"line":21,"column":5}},{"start":{"line":19,"column":4},"end":{"line":21,"column":5}}],"line":19},"1":{"loc":{"start":{"line":31,"column":22},"end":{"line":31,"column":80}},"type":"cond-expr","locations":[{"start":{"line":31,"column":73},"end":{"line":31,"column":75}},{"start":{"line":31,"column":78},"end":{"line":31,"column":80}}],"line":31},"2":{"loc":{"start":{"line":31,"column":22},"end":{"line":31,"column":70}},"type":"binary-expr","locations":[{"start":{"line":31,"column":22},"end":{"line":31,"column":53}},{"start":{"line":31,"column":57},"end":{"line":31,"column":70}}],"line":31},"3":{"loc":{"start":{"line":50,"column":29},"end":{"line":50,"column":107}},"type":"cond-expr","locations":[{"start":{"line":50,"column":72},"end":{"line":50,"column":78}},{"start":{"line":50,"column":81},"end":{"line":50,"column":107}}],"line":50},"4":{"loc":{"start":{"line":50,"column":29},"end":{"line":50,"column":69}},"type":"binary-expr","locations":[{"start":{"line":50,"column":29},"end":{"line":50,"column":46}},{"start":{"line":50,"column":50},"end":{"line":50,"column":69}}],"line":50},"5":{"loc":{"start":{"line":51,"column":27},"end":{"line":51,"column":103}},"type":"cond-expr","locations":[{"start":{"line":51,"column":70},"end":{"line":51,"column":76}},{"start":{"line":51,"column":79},"end":{"line":51,"column":103}}],"line":51},"6":{"loc":{"start":{"line":51,"column":27},"end":{"line":51,"column":67}},"type":"binary-expr","locations":[{"start":{"line":51,"column":27},"end":{"line":51,"column":44}},{"start":{"line":51,"column":48},"end":{"line":51,"column":67}}],"line":51},"7":{"loc":{"start":{"line":52,"column":8},"end":{"line":54,"column":9}},"type":"if","locations":[{"start":{"line":52,"column":8},"end":{"line":54,"column":9}},{"start":{"line":52,"column":8},"end":{"line":54,"column":9}}],"line":52},"8":{"loc":{"start":{"line":62,"column":8},"end":{"line":68,"column":9}},"type":"if","locations":[{"start":{"line":62,"column":8},"end":{"line":68,"column":9}},{"start":{"line":62,"column":8},"end":{"line":68,"column":9}}],"line":62},"9":{"loc":{"start":{"line":64,"column":12},"end":{"line":66,"column":13}},"type":"if","locations":[{"start":{"line":64,"column":12},"end":{"line":66,"column":13}},{"start":{"line":64,"column":12},"end":{"line":66,"column":13}}],"line":64},"10":{"loc":{"start":{"line":70,"column":8},"end":{"line":82,"column":9}},"type":"if","locations":[{"start":{"line":70,"column":8},"end":{"line":82,"column":9}},{"start":{"line":70,"column":8},"end":{"line":82,"column":9}}],"line":70},"11":{"loc":{"start":{"line":73,"column":12},"end":{"line":81,"column":13}},"type":"if","locations":[{"start":{"line":73,"column":12},"end":{"line":81,"column":13}},{"start":{"line":73,"column":12},"end":{"line":81,"column":13}}],"line":73},"12":{"loc":{"start":{"line":73,"column":16},"end":{"line":73,"column":41}},"type":"binary-expr","locations":[{"start":{"line":73,"column":16},"end":{"line":73,"column":26}},{"start":{"line":73,"column":30},"end":{"line":73,"column":41}}],"line":73}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":0,"8":1,"9":0,"10":1,"11":8,"12":0,"13":8,"14":8,"15":8,"16":8,"17":8,"18":8,"19":8,"20":8,"21":0,"22":8,"23":8,"24":8,"25":8,"26":8,"27":8,"28":12,"29":12,"30":12,"31":12,"32":8,"33":8,"34":6,"35":8,"36":8,"37":8,"38":0,"39":8,"40":8,"41":8,"42":0,"43":0,"44":0,"45":0,"46":8,"47":1,"48":1},"f":{"0":0,"1":0,"2":8,"3":8,"4":8,"5":6,"6":8},"b":{"0":[0,8],"1":[8,0],"2":[8,8],"3":[0,12],"4":[12,12],"5":[0,12],"6":[12,12],"7":[8,4],"8":[8,0],"9":[0,8],"10":[0,8],"11":[0,0],"12":[0,0]},"inputSourceMap":{"version":3,"file":"/Users/oliverchan/reach-app/gcf/src/logger/index.ts","sources":["/Users/oliverchan/reach-app/gcf/src/logger/index.ts"],"names":[],"mappings":";;;AAAA,0DAA6E;AAE7E,mCAAkC;AAClC,+BAA+B;AAC/B,6CAAkC;AAEvB,QAAA,gBAAgB,GAA2B,EAAE,CAAC;AAEzD,SAAgB,mBAAmB,CAAC,GAAW,EAAE,KAAU;IACvD,wBAAgB,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC;AAClC,CAAC;AAFD,kDAEC;AAED,0DAA0D;AAC1D,SAAgB,qBAAqB;IACjC,wBAAgB,GAAG,EAAE,CAAC;AAC1B,CAAC;AAFD,sDAEC;AAED,SAAS,+BAA+B,CAAC,IAAS;IAC9C,IAAI,IAAA,iBAAQ,EAAC,IAAI,CAAC,EAAE;QAChB,OAAO,IAAA,cAAO,EAAC,IAAI,CAAC,CAAC;KACxB;IAED,OAAO,IAAI,CAAC;AAChB,CAAC;AAED,SAAS,WAAW;;IAChB,kEAAkE;IAClE,MAAM,gBAAgB,GAAG,yBAAyB,CAAC;IACnD,IAAI;QACA,MAAM,SAAS,GAAG,EAAE,KAAK,EAAE,SAAS,EAAE,CAAC;QACvC,KAAK,CAAC,iBAAiB,CAAC,SAAS,CAAC,CAAC;QACnC,MAAM,KAAK,GAAW,MAAA,SAAS,CAAC,KAAK,mCAAI,EAAE,CAAC;QAC5C,MAAM,IAAI,GAAG,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;QAClC,OAAO,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,GAAG,MAAM,CAAC,MAAM,EAAE,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC;KACzF;IAAC,OAAO,CAAC,EAAE;QACR,OAAO,gBAAgB,CAAC;KAC3B;AACL,CAAC;AAED,SAAS,QAAQ;IACb,MAAM,KAAK,GAAG,IAAA,iBAAG,GAAE,CAAC;IAEpB,MAAM,KAAK,GAAU,EAAE,CAAC;IAExB,2DAA2D;IAC3D,6DAA6D;IAC7D,MAAM,qBAAqB,GAAG,CAAC,CAAC;IAChC,KAAK,CAAC,QAAQ,GAAG,WAAW,EAAE,CAAC;IAE/B,oFAAoF;IACpF,mFAAmF;IACnF,KAAK,IAAI,CAAC,GAAG,qBAAqB,EAAE,CAAC,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,IAAI,CAAC,EAAE;QAC1D,MAAM,QAAQ,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;QAC1B,KAAK,CAAC,YAAY,GAAG,QAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAE,eAAe,EAAE,CAAC;QACjD,KAAK,CAAC,UAAU,GAAG,QAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAE,aAAa,EAAE,CAAC;QAE7C,IAAI,KAAK,CAAC,YAAY,EAAE;YACpB,MAAM;SACT;KACJ;IAED,OAAO,KAAK,CAAC;AACjB,CAAC;AAED,SAAgB,UAAU,CAAC,QAAqB;IAC5C,OAAO,CAAC,OAAO,EAAE,oBAAoB,EAAE,EAAE;QACrC,IAAI,aAAa,CAAC;QAElB,sDAAsD;QACtD,IAAI,OAAO,KAAK,SAAS,EAAE;YACvB,IAAI,YAAY,GAAG,CAAC,OAAO,CAAC,CAAC;YAC7B,IAAI,KAAK,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE;gBACxB,YAAY,GAAG,OAAO,CAAC;aAC1B;YACD,aAAa,GAAG,YAAY,CAAC,GAAG,CAAC,+BAA+B,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;SAC/E;QAED,MAAM,QAAQ,iCACV,OAAO,EAAE,aAAa,EACtB,QAAQ,IACL,wBAAgB,KACnB,KAAK,oBACE,QAAQ,EAAE,IAEpB,CAAC;QAEF,IAAI,oBAAoB,EAAE;YACtB,MAAM,EAAE,SAAS,EAAE,UAAU,EAAE,GAAG,oBAAoB,CAAC;YACvD,sEAAsE;YACtE,IAAI,CAAC,SAAS,IAAI,CAAC,UAAU,EAAE;gBAC3B,QAAQ,CAAC,OAAO,GAAG;oBACf,QAAQ,CAAC,OAAO;oBAChB,+BAA+B,CAAC,oBAAoB,CAAC;iBACxD,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;aACf;iBAAM;gBACH,QAAQ,CAAC,SAAS,CAAC,GAAG,UAAU,CAAC;aACpC;SACJ;QAED,IAAA,cAAK,EAAC,QAAQ,CAAC,CAAC;IACpB,CAAC,CAAC;AACN,CAAC;AArCD,gCAqCC;AAED;;;;;;;;;;GAUG;AACU,QAAA,MAAM,GAAG;IAClB,KAAK,EAAE,UAAU,CAAC,OAAO,CAAC;IAC1B,IAAI,EAAE,UAAU,CAAC,MAAM,CAAC;IACxB,OAAO,EAAE,UAAU,CAAC,QAAQ,CAAC;IAC7B,IAAI,EAAE,UAAU,CAAC,SAAS,CAAC;IAC3B,KAAK,EAAE,UAAU,CAAC,OAAO,CAAC;IAC1B,QAAQ,EAAE,UAAU,CAAC,UAAU,CAAC;CACnC,CAAC","sourcesContent":["import { LogEntry, LogSeverity, write } from 'firebase-functions/lib/logger';\nimport { Log, Scope } from './logger.types';\nimport { isObject } from 'lodash';\nimport { inspect } from 'util';\nimport { get } from 'stack-trace';\n\nexport let logGlobalContext: { [key: string]: any } = {};\n\nexport function addLogGlobalContext(key: string, entry: any) {\n    logGlobalContext[key] = entry;\n}\n\n/** Removes all context that were included in the logs. */\nexport function cleanLogGlobalContext() {\n    logGlobalContext = {};\n}\n\nfunction checkIfObjectAndConvertToString(data: any) {\n    if (isObject(data)) {\n        return inspect(data);\n    }\n\n    return data;\n}\n\nfunction getFilePath() {\n    // (code is all bundled into index, hence its the current default)\n    const DEFAULT_FILEPATH = 'gcf/src/logger/index.ts';\n    try {\n        const testError = { stack: undefined };\n        Error.captureStackTrace(testError);\n        const stack: string = testError.stack ?? '';\n        const file = stack.split('\\n')[4];\n        return file.substring(file.lastIndexOf('gcf/') + 'gcf/'.length, file.indexOf('.ts:'));\n    } catch (e) {\n        return DEFAULT_FILEPATH;\n    }\n}\n\nfunction getScope(): Scope {\n    const trace = get();\n\n    const scope: Scope = {};\n\n    // trace[0] => getScope, trace[1] -> wrapper function below\n    // so we take trace[2] to get the correct scope of the caller\n    const SUB_TRACE_START_INDEX = 2;\n    scope.fileName = getFilePath();\n\n    // To get the rest of the scope, we traveres down the stack and find the first named\n    // function. This will allow us to handle scoping of anonymous functions/callbacks.\n    for (let i = SUB_TRACE_START_INDEX; i < trace.length; i += 1) {\n        const subTrace = trace[i];\n        scope.functionName = subTrace?.getFunctionName();\n        scope.methodName = subTrace?.getMethodName();\n\n        if (scope.functionName) {\n            break;\n        }\n    }\n\n    return scope;\n}\n\nexport function makeLogger(severity: LogSeverity): Log {\n    return (message, additionalProperties) => {\n        let messageString;\n\n        // We want to accept all falsy values except undefined\n        if (message !== undefined) {\n            let messageArray = [message];\n            if (Array.isArray(message)) {\n                messageArray = message;\n            }\n            messageString = messageArray.map(checkIfObjectAndConvertToString).join(' ');\n        }\n\n        const logEntry: LogEntry = {\n            message: messageString,\n            severity,\n            ...logGlobalContext,\n            scope: {\n                ...getScope(),\n            },\n        };\n\n        if (additionalProperties) {\n            const { namespace, properties } = additionalProperties;\n            // Handle instances where user throws in a random object as type \"any\"\n            if (!namespace || !properties) {\n                logEntry.message = [\n                    logEntry.message,\n                    checkIfObjectAndConvertToString(additionalProperties),\n                ].join(' ');\n            } else {\n                logEntry[namespace] = properties;\n            }\n        }\n\n        write(logEntry);\n    };\n}\n\n/**\n * Logger providing granular serverity levels as documented: https://cloud.google.com/logging/docs/reference/v2/rest/v2/LogEntry#logseverity\n *\n * LEVEL debug: Temporary logs for debugging, to be removed when feature is stable (should be used with a TODO {AUTHOR NAME} above it)\n * LEVEL info: Routine information, such as ongoing status or performance.\n * LEVEL metrics: Use to log metrics\n * LEVEL warn: Non-critical errors that should be filtered out in alarms (for example rateLimiter)\n * LEVEL error: Error events are likely to cause problems.\n * LEVEL critical: Critical events cause more severe problems or outages.\n *\n */\nexport const logger = {\n    debug: makeLogger('DEBUG'),\n    info: makeLogger('INFO'),\n    metrics: makeLogger('NOTICE'),\n    warn: makeLogger('WARNING'),\n    error: makeLogger('ERROR'),\n    critical: makeLogger('CRITICAL'),\n};\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"ee3cb6c44cec8b9ac593e0fcb90fda88ae3e09ee","contentHash":"81f4de107708f15bf8808cbe7f904db21b691893aee30496f6bdd00f396a42a2"},"/Users/oliverchan/reach-app/gcf/src/utils/cacheWithExpiry.ts":{"path":"/Users/oliverchan/reach-app/gcf/src/utils/cacheWithExpiry.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":62}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":62}},"3":{"start":{"line":6,"column":0},"end":{"line":6,"column":33}},"4":{"start":{"line":7,"column":26},"end":{"line":7,"column":69}},"5":{"start":{"line":8,"column":17},"end":{"line":8,"column":40}},"6":{"start":{"line":15,"column":25},"end":{"line":15,"column":34}},"7":{"start":{"line":16,"column":27},"end":{"line":37,"column":5}},"8":{"start":{"line":18,"column":26},"end":{"line":18,"column":68}},"9":{"start":{"line":19,"column":31},"end":{"line":19,"column":51}},"10":{"start":{"line":20,"column":30},"end":{"line":20,"column":165}},"11":{"start":{"line":21,"column":8},"end":{"line":26,"column":9}},"12":{"start":{"line":23,"column":12},"end":{"line":23,"column":79}},"13":{"start":{"line":24,"column":35},"end":{"line":24,"column":60}},"14":{"start":{"line":25,"column":12},"end":{"line":25,"column":96}},"15":{"start":{"line":28,"column":30},"end":{"line":28,"column":113}},"16":{"start":{"line":29,"column":8},"end":{"line":36,"column":9}},"17":{"start":{"line":30,"column":12},"end":{"line":30,"column":39}},"18":{"start":{"line":33,"column":12},"end":{"line":33,"column":68}},"19":{"start":{"line":34,"column":12},"end":{"line":34,"column":48}},"20":{"start":{"line":35,"column":12},"end":{"line":35,"column":33}},"21":{"start":{"line":39,"column":8},"end":{"line":39,"column":29}},"22":{"start":{"line":41,"column":4},"end":{"line":41,"column":42}},"23":{"start":{"line":43,"column":0},"end":{"line":43,"column":42}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":56},"end":{"line":2,"column":57}},"loc":{"start":{"line":2,"column":71},"end":{"line":4,"column":1}},"line":2},"1":{"name":"cacheWithExpiry","decl":{"start":{"line":14,"column":9},"end":{"line":14,"column":24}},"loc":{"start":{"line":14,"column":56},"end":{"line":42,"column":1}},"line":14},"2":{"name":"(anonymous_2)","decl":{"start":{"line":16,"column":27},"end":{"line":16,"column":28}},"loc":{"start":{"line":16,"column":46},"end":{"line":37,"column":5}},"line":16},"3":{"name":"clearCache","decl":{"start":{"line":38,"column":13},"end":{"line":38,"column":23}},"loc":{"start":{"line":38,"column":26},"end":{"line":40,"column":5}},"line":38}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":56},"end":{"line":4,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":11},"end":{"line":3,"column":61}},"type":"cond-expr","locations":[{"start":{"line":3,"column":37},"end":{"line":3,"column":40}},{"start":{"line":3,"column":43},"end":{"line":3,"column":61}}],"line":3},"2":{"loc":{"start":{"line":3,"column":12},"end":{"line":3,"column":33}},"type":"binary-expr","locations":[{"start":{"line":3,"column":12},"end":{"line":3,"column":15}},{"start":{"line":3,"column":19},"end":{"line":3,"column":33}}],"line":3},"3":{"loc":{"start":{"line":14,"column":43},"end":{"line":14,"column":54}},"type":"default-arg","locations":[{"start":{"line":14,"column":49},"end":{"line":14,"column":54}}],"line":14},"4":{"loc":{"start":{"line":20,"column":30},"end":{"line":20,"column":165}},"type":"cond-expr","locations":[{"start":{"line":20,"column":159},"end":{"line":20,"column":161}},{"start":{"line":20,"column":164},"end":{"line":20,"column":165}}],"line":20},"5":{"loc":{"start":{"line":20,"column":30},"end":{"line":20,"column":156}},"type":"binary-expr","locations":[{"start":{"line":20,"column":30},"end":{"line":20,"column":139}},{"start":{"line":20,"column":143},"end":{"line":20,"column":156}}],"line":20},"6":{"loc":{"start":{"line":20,"column":36},"end":{"line":20,"column":129}},"type":"cond-expr","locations":[{"start":{"line":20,"column":104},"end":{"line":20,"column":110}},{"start":{"line":20,"column":113},"end":{"line":20,"column":129}}],"line":20},"7":{"loc":{"start":{"line":20,"column":36},"end":{"line":20,"column":101}},"type":"binary-expr","locations":[{"start":{"line":20,"column":36},"end":{"line":20,"column":84}},{"start":{"line":20,"column":88},"end":{"line":20,"column":101}}],"line":20},"8":{"loc":{"start":{"line":21,"column":8},"end":{"line":26,"column":9}},"type":"if","locations":[{"start":{"line":21,"column":8},"end":{"line":26,"column":9}},{"start":{"line":21,"column":8},"end":{"line":26,"column":9}}],"line":21},"9":{"loc":{"start":{"line":28,"column":30},"end":{"line":28,"column":113}},"type":"cond-expr","locations":[{"start":{"line":28,"column":98},"end":{"line":28,"column":104}},{"start":{"line":28,"column":107},"end":{"line":28,"column":113}}],"line":28},"10":{"loc":{"start":{"line":28,"column":30},"end":{"line":28,"column":95}},"type":"binary-expr","locations":[{"start":{"line":28,"column":30},"end":{"line":28,"column":78}},{"start":{"line":28,"column":82},"end":{"line":28,"column":95}}],"line":28}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":1,"23":1},"f":{"0":1,"1":1,"2":0,"3":0},"b":{"0":[1,1,1],"1":[0,1],"2":[1,1],"3":[1],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0]},"inputSourceMap":{"version":3,"file":"/Users/oliverchan/reach-app/gcf/src/utils/cacheWithExpiry.ts","sources":["/Users/oliverchan/reach-app/gcf/src/utils/cacheWithExpiry.ts"],"names":[],"mappings":";;;;;;AAAA,sEAAqC;AAErC,yCAAsC;AAYtC;;;;GAIG;AACH,SAAgB,eAAe,CAC3B,gBAAmB,EACnB,GAAG,GAAG,KAAK;IAEX,MAAM,YAAY,GAAG,IAAI,GAAG,EAA0C,CAAC;IAEvE,MAAM,cAAc,GAAG,KAAK,EAAE,GAAG,IAAmB,EAA+B,EAAE;;QACjF,MAAM,SAAS,GAAG,IAAA,yBAAM,GAAE,CAAC,OAAO,EAAE,CAAC;QACrC,MAAM,cAAc,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;QAE5C,MAAM,aAAa,GAAG,MAAA,MAAA,YAAY,CAAC,GAAG,CAAC,cAAc,CAAC,0CAAE,aAAa,mCAAI,CAAC,CAAC;QAC3E,IAAI,aAAa,GAAG,GAAG,GAAG,IAAI,IAAI,SAAS,EAAE;YACzC,6EAA6E;YAC7E,eAAM,CAAC,KAAK,CAAC,2CAA2C,CAAC,CAAC;YAC1D,MAAM,cAAc,GAAG,gBAAgB,CAAC,GAAG,IAAI,CAAC,CAAC;YACjD,YAAY,CAAC,GAAG,CAAC,cAAc,EAAE,EAAE,GAAG,EAAE,cAAc,EAAE,aAAa,EAAE,SAAS,EAAE,CAAC,CAAC;SACvF;QAED,+CAA+C;QAC/C,MAAM,aAAa,GAAG,MAAA,YAAY,CAAC,GAAG,CAAC,cAAc,CAAC,0CAAE,GAAoB,CAAC;QAC7E,IAAI;YACA,OAAO,MAAM,aAAa,CAAC;SAC9B;QAAC,OAAO,KAAU,EAAE;YACjB,eAAM,CAAC,IAAI,CAAC,iCAAiC,CAAC,CAAC;YAC/C,YAAY,CAAC,MAAM,CAAC,cAAc,CAAC,CAAC;YACpC,OAAO,aAAa,CAAC;SACxB;IACL,CAAC,CAAC;IAEF,SAAS,UAAU;QACf,YAAY,CAAC,KAAK,EAAE,CAAC;IACzB,CAAC;IAED,OAAO,EAAE,cAAc,EAAE,UAAU,EAAE,CAAC;AAC1C,CAAC;AAlCD,0CAkCC","sourcesContent":["import moment from 'moment-timezone';\nimport { AsyncReturnType } from '@root/utils/utils.types';\nimport { logger } from '@root/logger';\n\ninterface CacheEntry<T> {\n    val: Promise<T>;\n    lastRetrieved: number;\n}\n\ninterface FunctionCache<T extends (...args: any) => Promise<any>> {\n    cachedFunction: (...args: Parameters<T>) => Promise<AsyncReturnType<T>>;\n    clearCache: () => void;\n}\n\n/**\n * Provides time-based caching logic around an arbitrary call, returning the wrapped call.\n * @param providerFunction: the expensive 'cached' call - should have all arguments pre-loaded.\n * @param ttl unit: seconds\n */\nexport function cacheWithExpiry<T extends (...args: any[]) => Promise<any>>(\n    providerFunction: T,\n    ttl = 86400\n): FunctionCache<T> {\n    const cachedValues = new Map<string, CacheEntry<AsyncReturnType<T>>>();\n\n    const cachedFunction = async (...args: Parameters<T>): Promise<AsyncReturnType<T>> => {\n        const unixMsNow = moment().valueOf();\n        const serializedArgs = JSON.stringify(args);\n\n        const lastRetrieved = cachedValues.get(serializedArgs)?.lastRetrieved ?? 0;\n        if (lastRetrieved + ttl * 1000 <= unixMsNow) {\n            // First guy making the request - allow others to rely on the same invocation\n            logger.debug('Cache miss - retrieving underlying value.');\n            const requestPromise = providerFunction(...args);\n            cachedValues.set(serializedArgs, { val: requestPromise, lastRetrieved: unixMsNow });\n        }\n\n        // Erase cache if the cached value is an error.\n        const promisedValue = cachedValues.get(serializedArgs)?.val as ReturnType<T>;\n        try {\n            return await promisedValue;\n        } catch (error: any) {\n            logger.warn('Underlying promise was rejected');\n            cachedValues.delete(serializedArgs);\n            return promisedValue;\n        }\n    };\n\n    function clearCache() {\n        cachedValues.clear();\n    }\n\n    return { cachedFunction, clearCache };\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"f9cca9ef92a276d39adbf69e6f296695cac12fc3","contentHash":"ac884ebcc44d7d90f5911e0258be5034267aeb7c981caa59a40cec92ebaac3aa"},"/Users/oliverchan/reach-app/gcf/src/errors/index.ts":{"path":"/Users/oliverchan/reach-app/gcf/src/errors/index.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":8,"column":3}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":33}},"2":{"start":{"line":3,"column":26},"end":{"line":3,"column":33}},"3":{"start":{"line":4,"column":4},"end":{"line":4,"column":89}},"4":{"start":{"line":4,"column":71},"end":{"line":4,"column":83}},"5":{"start":{"line":6,"column":4},"end":{"line":6,"column":33}},"6":{"start":{"line":6,"column":26},"end":{"line":6,"column":33}},"7":{"start":{"line":7,"column":4},"end":{"line":7,"column":17}},"8":{"start":{"line":9,"column":25},"end":{"line":13,"column":2}},"9":{"start":{"line":10,"column":4},"end":{"line":10,"column":72}},"10":{"start":{"line":12,"column":4},"end":{"line":12,"column":21}},"11":{"start":{"line":14,"column":19},"end":{"line":20,"column":1}},"12":{"start":{"line":15,"column":4},"end":{"line":15,"column":42}},"13":{"start":{"line":15,"column":31},"end":{"line":15,"column":42}},"14":{"start":{"line":16,"column":17},"end":{"line":16,"column":19}},"15":{"start":{"line":17,"column":4},"end":{"line":17,"column":141}},"16":{"start":{"line":17,"column":21},"end":{"line":17,"column":141}},"17":{"start":{"line":17,"column":40},"end":{"line":17,"column":141}},"18":{"start":{"line":17,"column":109},"end":{"line":17,"column":141}},"19":{"start":{"line":18,"column":4},"end":{"line":18,"column":36}},"20":{"start":{"line":19,"column":4},"end":{"line":19,"column":18}},"21":{"start":{"line":21,"column":0},"end":{"line":21,"column":62}},"22":{"start":{"line":22,"column":0},"end":{"line":22,"column":105}},"23":{"start":{"line":23,"column":18},"end":{"line":23,"column":61}},"24":{"start":{"line":24,"column":17},"end":{"line":24,"column":40}},"25":{"start":{"line":25,"column":16},"end":{"line":25,"column":65}},"26":{"start":{"line":26,"column":21},"end":{"line":26,"column":50}},"27":{"start":{"line":28,"column":4},"end":{"line":33,"column":6}},"28":{"start":{"line":29,"column":24},"end":{"line":29,"column":29}},"29":{"start":{"line":30,"column":34},"end":{"line":30,"column":49}},"30":{"start":{"line":31,"column":8},"end":{"line":31,"column":102}},"31":{"start":{"line":32,"column":8},"end":{"line":32,"column":70}},"32":{"start":{"line":35,"column":0},"end":{"line":35,"column":34}},"33":{"start":{"line":36,"column":0},"end":{"line":57,"column":2}},"34":{"start":{"line":62,"column":0},"end":{"line":62,"column":60}},"35":{"start":{"line":65,"column":4},"end":{"line":81,"column":6}},"36":{"start":{"line":66,"column":8},"end":{"line":80,"column":9}},"37":{"start":{"line":67,"column":12},"end":{"line":67,"column":42}},"38":{"start":{"line":71,"column":12},"end":{"line":78,"column":13}},"39":{"start":{"line":72,"column":16},"end":{"line":72,"column":37}},"40":{"start":{"line":75,"column":16},"end":{"line":75,"column":109}},"41":{"start":{"line":76,"column":16},"end":{"line":76,"column":58}},"42":{"start":{"line":77,"column":16},"end":{"line":77,"column":70}},"43":{"start":{"line":79,"column":12},"end":{"line":79,"column":31}},"44":{"start":{"line":83,"column":0},"end":{"line":83,"column":44}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":74},"end":{"line":2,"column":75}},"loc":{"start":{"line":2,"column":96},"end":{"line":5,"column":1}},"line":2},"1":{"name":"(anonymous_1)","decl":{"start":{"line":4,"column":58},"end":{"line":4,"column":59}},"loc":{"start":{"line":4,"column":69},"end":{"line":4,"column":85}},"line":4},"2":{"name":"(anonymous_2)","decl":{"start":{"line":5,"column":6},"end":{"line":5,"column":7}},"loc":{"start":{"line":5,"column":28},"end":{"line":8,"column":1}},"line":5},"3":{"name":"(anonymous_3)","decl":{"start":{"line":9,"column":80},"end":{"line":9,"column":81}},"loc":{"start":{"line":9,"column":95},"end":{"line":11,"column":1}},"line":9},"4":{"name":"(anonymous_4)","decl":{"start":{"line":11,"column":5},"end":{"line":11,"column":6}},"loc":{"start":{"line":11,"column":20},"end":{"line":13,"column":1}},"line":11},"5":{"name":"(anonymous_5)","decl":{"start":{"line":14,"column":50},"end":{"line":14,"column":51}},"loc":{"start":{"line":14,"column":65},"end":{"line":20,"column":1}},"line":14},"6":{"name":"createError","decl":{"start":{"line":27,"column":9},"end":{"line":27,"column":20}},"loc":{"start":{"line":27,"column":31},"end":{"line":34,"column":1}},"line":27},"7":{"name":"(anonymous_7)","decl":{"start":{"line":28,"column":11},"end":{"line":28,"column":12}},"loc":{"start":{"line":28,"column":28},"end":{"line":33,"column":5}},"line":28},"8":{"name":"wrapInHttpsError","decl":{"start":{"line":64,"column":9},"end":{"line":64,"column":25}},"loc":{"start":{"line":64,"column":35},"end":{"line":82,"column":1}},"line":64},"9":{"name":"(anonymous_9)","decl":{"start":{"line":65,"column":11},"end":{"line":65,"column":12}},"loc":{"start":{"line":65,"column":30},"end":{"line":81,"column":5}},"line":65}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":8,"column":3}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":57},"end":{"line":8,"column":2}}],"line":2},"1":{"loc":{"start":{"line":2,"column":57},"end":{"line":8,"column":2}},"type":"cond-expr","locations":[{"start":{"line":2,"column":74},"end":{"line":5,"column":1}},{"start":{"line":5,"column":6},"end":{"line":8,"column":1}}],"line":2},"2":{"loc":{"start":{"line":3,"column":4},"end":{"line":3,"column":33}},"type":"if","locations":[{"start":{"line":3,"column":4},"end":{"line":3,"column":33}},{"start":{"line":3,"column":4},"end":{"line":3,"column":33}}],"line":3},"3":{"loc":{"start":{"line":6,"column":4},"end":{"line":6,"column":33}},"type":"if","locations":[{"start":{"line":6,"column":4},"end":{"line":6,"column":33}},{"start":{"line":6,"column":4},"end":{"line":6,"column":33}}],"line":6},"4":{"loc":{"start":{"line":9,"column":25},"end":{"line":13,"column":2}},"type":"binary-expr","locations":[{"start":{"line":9,"column":26},"end":{"line":9,"column":30}},{"start":{"line":9,"column":34},"end":{"line":9,"column":57}},{"start":{"line":9,"column":63},"end":{"line":13,"column":1}}],"line":9},"5":{"loc":{"start":{"line":9,"column":63},"end":{"line":13,"column":1}},"type":"cond-expr","locations":[{"start":{"line":9,"column":80},"end":{"line":11,"column":1}},{"start":{"line":11,"column":5},"end":{"line":13,"column":1}}],"line":9},"6":{"loc":{"start":{"line":14,"column":19},"end":{"line":20,"column":1}},"type":"binary-expr","locations":[{"start":{"line":14,"column":20},"end":{"line":14,"column":24}},{"start":{"line":14,"column":28},"end":{"line":14,"column":45}},{"start":{"line":14,"column":50},"end":{"line":20,"column":1}}],"line":14},"7":{"loc":{"start":{"line":15,"column":4},"end":{"line":15,"column":42}},"type":"if","locations":[{"start":{"line":15,"column":4},"end":{"line":15,"column":42}},{"start":{"line":15,"column":4},"end":{"line":15,"column":42}}],"line":15},"8":{"loc":{"start":{"line":15,"column":8},"end":{"line":15,"column":29}},"type":"binary-expr","locations":[{"start":{"line":15,"column":8},"end":{"line":15,"column":11}},{"start":{"line":15,"column":15},"end":{"line":15,"column":29}}],"line":15},"9":{"loc":{"start":{"line":17,"column":4},"end":{"line":17,"column":141}},"type":"if","locations":[{"start":{"line":17,"column":4},"end":{"line":17,"column":141}},{"start":{"line":17,"column":4},"end":{"line":17,"column":141}}],"line":17},"10":{"loc":{"start":{"line":17,"column":40},"end":{"line":17,"column":141}},"type":"if","locations":[{"start":{"line":17,"column":40},"end":{"line":17,"column":141}},{"start":{"line":17,"column":40},"end":{"line":17,"column":141}}],"line":17},"11":{"loc":{"start":{"line":17,"column":44},"end":{"line":17,"column":107}},"type":"binary-expr","locations":[{"start":{"line":17,"column":44},"end":{"line":17,"column":59}},{"start":{"line":17,"column":63},"end":{"line":17,"column":107}}],"line":17},"12":{"loc":{"start":{"line":71,"column":12},"end":{"line":78,"column":13}},"type":"if","locations":[{"start":{"line":71,"column":12},"end":{"line":78,"column":13}},{"start":{"line":71,"column":12},"end":{"line":78,"column":13}}],"line":71}},"s":{"0":1,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":1,"9":0,"10":0,"11":1,"12":1,"13":1,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":1,"22":1,"23":1,"24":1,"25":1,"26":1,"27":1,"28":4,"29":4,"30":4,"31":4,"32":1,"33":1,"34":1,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":1},"f":{"0":0,"1":0,"2":0,"3":0,"4":0,"5":1,"6":1,"7":4,"8":0,"9":0},"b":{"0":[1,1,1],"1":[1,0],"2":[0,0],"3":[0,0],"4":[1,1,1],"5":[1,0],"6":[1,1,1],"7":[1,0],"8":[1,1],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0]},"inputSourceMap":{"version":3,"file":"/Users/oliverchan/reach-app/gcf/src/errors/index.ts","sources":["/Users/oliverchan/reach-app/gcf/src/errors/index.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA,8DAAgD;AAChD,yCAAsC;AACtC,kEAAoE;AACpE,mDAAsD;AAQtD,SAAgB,WAAW,CACvB,QAAW;IAEX,OAAO,UAAU,KAAc;QAC3B,MAAM,OAAO,GAAG,KAAK,CAAC;QACtB,MAAM,EAAE,IAAI,EAAE,OAAO,EAAE,GAAG,QAAQ,CAAC,KAAK,CAAiB,CAAC;QAC1D,eAAM,CAAC,IAAI,CAAC,gBAAgB,IAAI,qBAAqB,OAAO,cAAc,OAAO,EAAE,CAAC,CAAC;QACrF,OAAO,IAAI,SAAS,CAAC,KAAK,CAAC,UAAU,CAAC,IAAI,EAAE,OAAO,EAAE,OAAO,CAAC,CAAC;IAClE,CAAC,CAAC;AACN,CAAC;AATD,kCASC;AAEY,QAAA,cAAc,GAAG;IAC1B,QAAQ,EAAE;QACN,IAAI,EAAE,UAAU;QAChB,OAAO,EAAE,uCAAuC;KACnD;IACD,aAAa,EAAE;QACX,IAAI,EAAE,kBAAkB;QACxB,OAAO,EAAE,iDAAiD;KAC7D;IACD,YAAY,EAAE;QACV,IAAI,EAAE,mBAAmB;QACzB,OAAO,EAAE,cAAc;KAC1B;IACD,UAAU,EAAE;QACR,IAAI,EAAE,oBAAoB;QAC1B,OAAO,EAAE,yBAAyB;KACrC;IACD,MAAM,EAAE;QACJ,IAAI,EAAE,mBAAmB;QACzB,OAAO,EAAE,iDAAiD;KAC7D;CACK,CAAC;AAEX;;;GAGG;AACU,QAAA,aAAa,GAAG,WAAW,CAAC,sBAAc,CAAC,CAAC;AAEzD,2FAA2F;AAC3F,SAAgB,gBAAgB,CAC5B,OAAU;IAEV,OAAO,KAAK,EAAE,GAAG,IAAI,EAAE,EAAE;QACrB,IAAI;YACA,OAAO,MAAM,OAAO,CAAC,GAAG,IAAI,CAAC,CAAC;SACjC;QAAC,OAAO,KAAU,EAAE;YACjB,IAAI,YAAmB,CAAC;YACxB,IAAI,KAAK,YAAY,kBAAU,EAAE;gBAC7B,YAAY,GAAG,KAAK,CAAC;aACxB;iBAAM;gBACH,eAAM,CAAC,KAAK,CAAC,CAAC,GAAG,OAAO,CAAC,IAAI,6CAA6C,EAAE,KAAK,CAAC,CAAC,CAAC;gBACpF,IAAA,6BAAgB,EAAC,KAAK,CAAC,CAAC;gBACxB,YAAY,GAAG,IAAA,qBAAa,EAAC,UAAU,CAAC,CAAC;aAC5C;YAED,MAAM,YAAY,CAAC;SACtB;IACL,CAAC,CAAC;AACN,CAAC;AAnBD,4CAmBC","sourcesContent":["import * as functions from 'firebase-functions';\nimport { logger } from '@root/logger';\nimport { HttpsError } from 'firebase-functions/lib/providers/https';\nimport { captureException } from '@sentry/serverless';\nimport { AsyncReturnType } from '@root/utils/utils.types';\n\nexport interface ErrorDetails {\n    code: functions.https.FunctionsErrorCode;\n    message: string;\n}\n\nexport function createError<T extends Readonly<{ [errorCode: string]: ErrorDetails }>>(\n    errorMap: T\n) {\n    return function (error: keyof T) {\n        const details = error;\n        const { code, message } = errorMap[error] as ErrorDetails;\n        logger.warn(`Error. Code: ${code}. TT-custom code: ${details}. message: ${message}`);\n        return new functions.https.HttpsError(code, message, details);\n    };\n}\n\nexport const GENERAL_ERRORS = {\n    INTERNAL: {\n        code: 'internal',\n        message: 'TT backend has an unexpected problem.',\n    },\n    INVALID_FIELD: {\n        code: 'invalid-argument',\n        message: 'Request data did not meet TT backend validation',\n    },\n    INVALID_TTID: {\n        code: 'permission-denied',\n        message: 'invalid user',\n    },\n    RATE_LIMIT: {\n        code: 'resource-exhausted',\n        message: 'Per-user quota exceeded',\n    },\n    DENIED: {\n        code: 'permission-denied',\n        message: 'TT backend denies your access to this resource.',\n    },\n} as const;\n\n/**\n * Light wrapper around firebase's HttpsError class - to enforce standardization of details and default logging.\n * @param error string, used as key for our enumerated errors.\n */\nexport const createTtError = createError(GENERAL_ERRORS);\n\n/** Used to wrap around Cloud Functions, to ensure we only return HttpsError to clients. */\nexport function wrapInHttpsError<T extends (...args: any[]) => Promise<any>>(\n    handler: T\n): (...args: Parameters<T>) => Promise<AsyncReturnType<T>> {\n    return async (...args) => {\n        try {\n            return await handler(...args);\n        } catch (error: any) {\n            let errorToThrow: Error;\n            if (error instanceof HttpsError) {\n                errorToThrow = error;\n            } else {\n                logger.error([`${handler.name} execution failed with unhandleable error: `, error]);\n                captureException(error);\n                errorToThrow = createTtError('INTERNAL');\n            }\n\n            throw errorToThrow;\n        }\n    };\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"bcda4fe73457c6dbbde11eeea4bd1c6d154810f7","contentHash":"ae14fcf07c7eebfac7f409e318c3792610ee76b9d2807271bd31318742a48685"}}